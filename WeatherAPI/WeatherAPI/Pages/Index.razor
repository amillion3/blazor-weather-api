@page "/"
@if (string.IsNullOrEmpty(_myJson))
{
    <span>Loading.....</span>
}
else
{
    <div class="padding">
        <div class="row container d-flex justify-content-center">
            <div v-if="located" class="col-lg-8 grid-margin stretch-card">
                <div class="card card-weather">
                    <div class="card-body">
                        <div class="weather-date-location">
                            <h3>@_dataResult.Data.Timelines[0].StartTime.ToString("ddd")</h3>
                            <p class="text-gray">
                                <span class="weather-date">@_dataResult.Data.Timelines[0].StartTime.ToShortDateString()</span>
                            </p>
                        </div>
                        <div class="weather-data d-flex">
                            <div class="mr-auto">
                                <h4 class="display-3">
                                    @_dataResult.Data.Timelines[0].Intervals[0].Values.Temperature<span class="symbol">&#176;</span> F
                                </h4>
                                <p>@WeatherCodeHelper.GetWeatherCode(_dataResult.Data.Timelines[0].Intervals[0].Values.WeatherCode.ToString())</p>
                            </div>
                        </div>
                    </div>
                    <div class="card-body p-0">
                        <div class="d-flex weakly-weather">@foreach (var item in _dataResult.Data.Timelines[0].Intervals)
                            {<div class="weakly-weather-item">
                                    <p class="mb-0">
                                        @item.StartTime.ToString("MM/dd/yyyy")  @item.StartTime.ToString("hh:mm tt")  @item.StartTime.ToString("ddd")
                                    </p>
                                    <div class="@string.Concat("weather-info", " " , @WeatherCodeHelper.GetWeatherCode(item.Values.WeatherCode.ToString()).ToLower().Replace(" ","_"))"></div>
                                    <p class="mb-0"> @item.Values.Temperature °F</p>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
@code{
    string _myJson = string.Empty;
    protected Root _dataResult;
    protected async override Task OnInitializedAsync()
    {
        var weather = new Weather.ApiWrapper.WeatherApi();
        _myJson = await weather.GetResult();
        var options = new JsonSerializerOptions
        {
            PropertyNamingPolicy = JsonNamingPolicy.CamelCase
        };
        
        _dataResult = JsonSerializer.Deserialize<Root>(_myJson, options);
    }
}